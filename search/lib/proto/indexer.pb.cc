// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "indexer.pb.h"
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>

namespace runcible {
namespace search {

namespace {

const ::google::protobuf::Descriptor* IndexItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IndexItem_reflection_ = NULL;

}  // namespace


void protobuf_BuildDesc_indexer_2eproto_AssignGlobalDescriptors(const ::google::protobuf::FileDescriptor* file) {
  IndexItem_descriptor_ = file->message_type(0);
  IndexItem::default_instance_ = new IndexItem();
  static const int IndexItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexItem, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexItem, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexItem, plain_contents_),
  };
  IndexItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IndexItem_descriptor_,
      IndexItem::default_instance_,
      IndexItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(IndexItem));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IndexItem_descriptor_, IndexItem::default_instance_);
  IndexItem::default_instance_->InitAsDefaultInstance();
}

void protobuf_BuildDesc_indexer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;
  ::google::protobuf::DescriptorPool* pool =
    ::google::protobuf::DescriptorPool::internal_generated_pool();

  pool->InternalBuildGeneratedFile(
    "\n\rindexer.proto\022\017runcible.search\"?\n\tInde"
    "xItem\022\013\n\003url\030\001 \002(\t\022\r\n\005title\030\002 \002(\t\022\026\n\016pla"
    "in_contents\030\003 \002(\t", 97,
  &protobuf_BuildDesc_indexer_2eproto_AssignGlobalDescriptors);
}

// Force BuildDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_indexer_2eproto {
  StaticDescriptorInitializer_indexer_2eproto() {
    protobuf_BuildDesc_indexer_2eproto();
  }
} static_descriptor_initializer_indexer_2eproto_;


// ===================================================================

const ::std::string IndexItem::_default_url_;
const ::std::string IndexItem::_default_title_;
const ::std::string IndexItem::_default_plain_contents_;
IndexItem::IndexItem()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    url_(const_cast< ::std::string*>(&_default_url_)),
    title_(const_cast< ::std::string*>(&_default_title_)),
    plain_contents_(const_cast< ::std::string*>(&_default_plain_contents_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void IndexItem::InitAsDefaultInstance() {}

IndexItem::IndexItem(const IndexItem& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    url_(const_cast< ::std::string*>(&_default_url_)),
    title_(const_cast< ::std::string*>(&_default_title_)),
    plain_contents_(const_cast< ::std::string*>(&_default_plain_contents_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

IndexItem::~IndexItem() {
  if (url_ != &_default_url_) {
    delete url_;
  }
  if (title_ != &_default_title_) {
    delete title_;
  }
  if (plain_contents_ != &_default_plain_contents_) {
    delete plain_contents_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* IndexItem::descriptor() {
  if (IndexItem_descriptor_ == NULL) protobuf_BuildDesc_indexer_2eproto();
  return IndexItem_descriptor_;
}

const IndexItem& IndexItem::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_indexer_2eproto();
  return *default_instance_;
}

IndexItem* IndexItem::default_instance_ = NULL;

IndexItem* IndexItem::New() const {
  return new IndexItem;
}

const ::google::protobuf::Descriptor* IndexItem::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* IndexItem::GetReflection() const {
  if (IndexItem_reflection_ == NULL) protobuf_BuildDesc_indexer_2eproto();
  return IndexItem_reflection_;
}

}  // namespace search
}  // namespace runcible
